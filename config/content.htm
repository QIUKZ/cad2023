<h1>v1v2v3</h1>
<p><span>本學期教學使用綜合教學網站<a href="https://mde.tw/cadnote/content/w8.html">cadnote (mde.tw)</a>，支援優化網路環境。課程透過Teams進行實時上課與錄影。考試安排於專屬考試網站進行exam.org。</span></p>
<p><span>ps.我有使用chatgpt幫我優化語言</span></p>
<h1>v4,v5</h1>
<p><span>我們已完成在Replit上的註冊，同時啟用雙重認證功能。我們還成功將GitHub帳戶與Replit帳戶綁定，加入了名為"cad2023"的倉儲。此外，我們已經配置了Replit，以便能夠在GitHub帳戶下編輯名為"cad2023"的倉儲中的內容，並啟動相應的網站。</span></p>
<h1>v6v7</h1>
<p><span>我們按照老師的步驟對學校網路環境進行了更改(優化)。同時，在進行任務一的零件圖繪畫時，我們選擇了使用Inventor。在完成繪畫後，我們將檔案匯出並轉換成.stl格式。</span></p>
<p><span>零件圖雲端共用網址</span></p>
<p><span>球:https://drive.google.com/file/d/1xHo7kbYPLGMIsZfhyJEiqyoamfe1JwWw/view?usp=drive_link</span></p>
<p><span>底座:https://drive.google.com/file/d/1xFTVrnZdcgIE8doHQAiuY_mqGXCo8V8F/view?usp=drive_link</span></p>
<p><span>桿子:https://drive.google.com/file/d/1srI2gH-FrUUJxkoHmVSWxFMsfCMQn8O8/view?usp=drive_link</span></p>
<p><span>軌道:https://drive.google.com/file/d/1_bFPCizMPjfhx4qIqGkmMmYf994FW-4i/view?usp=sharing</span></p>
<p><span>碗公:https://drive.google.com/file/d/1L5zV7-mE8Nf2NAXHO0fQR6xuQ1JamZL2/view?usp=drive_link</span></p>
<p><span>組合圖雲端共用網址</span></p>
<p><span>組合:https://drive.google.com/file/d/15XGblahf6cGaGec66LgtyFvGoRJ-cHEH/view?usp=drive_link</span></p>
<p><span>v8</span></p>
<p><span>下載做任務一的文件檔Coppeliasim(類似Onshape的軟體好處是usb可以隨插隨用) 將做好的零件圖在該檔案中組裝起來進行設置(基本都參考上課影片在做邊聽邊做會漏東漏西的)</span></p>
<p><span>成品雲端共用網址</span></p>
<p>成品:https://drive.google.com/file/d/1hBnTxlbp41jzoAStKK62UFUb3xnBTlYZ/view?usp=drive_link</p>
<p><span></span></p>
<h1>v9v10</h1>
<div class="flex-1 overflow-hidden">
<div class="react-scroll-to-bottom--css-npzpn-79elbk h-full">
<div class="react-scroll-to-bottom--css-npzpn-1n7m0yu">
<div class="flex flex-col text-sm gizmo:pb-9 dark:bg-gray-800 gizmo:dark:bg-transparent">
<div class="w-full text-token-text-primary border-b border-black/10 gizmo:border-0 dark:border-gray-900/50 gizmo:dark:border-0 bg-gray-50 gizmo:bg-transparent dark:bg-[#444654] gizmo:dark:bg-transparent" data-testid="conversation-turn-19">
<div class="p-4 gizmo:py-2 justify-center text-base md:gap-6 md:py-6 m-auto">
<div class="flex flex-1 gap-4 text-base mx-auto md:gap-6 gizmo:gap-3 gizmo:md:px-5 gizmo:lg:px-1 gizmo:xl:px-5 md:max-w-2xl lg:max-w-[38rem] gizmo:md:max-w-3xl gizmo:lg:max-w-[40rem] gizmo:xl:max-w-[48rem] xl:max-w-3xl } group final-completion">
<div class="relative flex w-[calc(100%-50px)] flex-col gizmo:w-full lg:w-[calc(100%-115px)] agent-turn">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full gap-3 gizmo:gap-0">
<div class="min-h-[20px] text-message peer flex flex-col items-start gap-3 whitespace-pre-wrap break-words peer-[.text-message]:mt-5 overflow-x-auto" data-message-author-role="assistant" data-message-id="fc1b9112-5989-454c-a35f-b3ebd5d8a5e5">
<div class="markdown prose w-full break-words dark:prose-invert light">
<p>在過去兩周裡，主要忙於應對考試和完成任務一。初次參與課程，通過詢問同學發現可以使用電腦和手機參與考試(他們有說查不到)但我還是感覺很穩畢竟有chatgpt。結果考超爛可是我發現考試內容主要來自教學網站。這讓我意識到期末考前需更加認真閱讀網站教材。</p>
<h1>s1511(補這幾周進度)</h1>
<p>由於自己有報名12/2的自動化工程師level1的學科考試,所以我考完期中考後都在看題庫考完後的那周也有立即追趕進度。</p>
<p>但由於沒上過程式的課程(目前正在修計算機程式),進度還是落後人家一段,到這周為止12/22 s1511的進度完成約75趴的內容<span> {1).</span><span>遠端登入</span><span>、2 )<span> </span></span><span>如何取放檔案</span><span>、3)<span> </span></span><span>如何與 github 帳號彼此信任</span><span>、4)<span> </span></span><span>如何取下 cad2023</span><span>、5)<span> </span></span><span>如何啟動或關閉 cad2023 倉儲</span><span>、6)<span> </span></span><span>如何連結到動態網站</span><span>、7)<span> </span></span><span>如何設定靜態網站}這些是目前完成的</span><span>(</span><span>剩下影片四有卡在程式的部分)</span>雖然中間有些比較難以理解的部分，組長也很有耐心的教導他真的沒辦法才會請我去問老師。</p>
<p>下禮拜上課沒意外的話可以搞定s1511的部分，繼續往下繼續製作別的內容</p>
<h1>V16搞定近端遠端的網址S1511整個結束</h1>
<p><a href="https://s1511.cycu.org:8163/">s1511.cycu.org</a>:8163</p>
<p><a href="https://s1511.cycu.org/~cad41136113/cad2023">https://s1511.cycu.org/~cad41136113/cad2023</a> 近端</p>
<p><a href="https://QIUKZ,github.io/cad2023">https://QIUKZ.github.io/cad2023</a> 遠端</p>
<p>原本剛做完的時候可以直接點連結到該網站但不知道為什麼現在又不行....我印象中好像是server.py的某個東西沒開啟...下次上課問一下組長好了做完是一回事搞懂他才是重要。</p>
<p></p>
<p></p>
<p><span></span></p>
<p><span></span></p>
<h4></h4>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>